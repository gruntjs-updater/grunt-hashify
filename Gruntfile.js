/*
 * grunt-hashify
 * https://github.com/suprMax/grunt-hashify
 *
 * Copyright (c) 2013 Max Degterev
 * `I dont give a shit` license
 */

'use strict';

module.exports = function(grunt) {

  // Project configuration.
  grunt.initConfig({
    meta: {
      custom_banner: '/**\n' +
        ' * GENERATED FILE, DO NOT EDIT.\n' +
        ' * This file is simply a collection of generated hashes for static assets in\n' +
        ' * the project. It is generated by grunt, see Gruntfile.js for details.\n' +
        ' */\n'
    },

    // Before generating any new files, remove any previously-created files.
    clean: {
      tests: ['tmp']
    },

    // Configuration to be run (and then tested).
    hashify: {
      default_options: {
        options: {
        },
        files: {
          'tmp/default_options': ['test/fixtures/testing', 'test/fixtures/123']
        }
      },
      custom_options: {
        options: {
          banner: '<%= meta.custom_banner %>',
          basedir: 'test/fixtures/'
        },
        src: ['test/fixtures/testing', 'test/fixtures/123'],
        dest: 'tmp/custom_options'
      },
      no_dest: {
        options: {
          complete: function(hashes) {
            grunt.file.write('tmp/no_dest_result', JSON.stringify(hashes));
            // return null, so if the task attempts to use the return value it should trigger an error
            return null;
          }
        },
        src: ['test/fixtures/testing']
      },
      international: {
        options: {
          complete: function(hashes) {
            grunt.file.write('tmp/international', JSON.stringify(hashes));
          }
        },
        src: ['test/fixtures/international']
      }
    },

    // Unit tests.
    nodeunit: {
      tests: ['test/*_test.js']
    }
  });

  // Actually load this plugin's task(s).
  grunt.loadTasks('tasks');

  // These plugins provide necessary tasks.
  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-contrib-nodeunit');

  // Whenever the "test" task is run, first clean the "tmp" dir, then run this
  // plugin's task(s), then test the result.
  grunt.registerTask('test', ['clean', 'hashify', 'nodeunit']);

  // By default, lint and run all tests.
  grunt.registerTask('default', ['test']);

};
